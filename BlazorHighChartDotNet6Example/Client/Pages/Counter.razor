@inject HighChartsService highChartsService
@page "/counter"

<PageTitle>HighChart Example</PageTitle>

<h1>Counter</h1>
<button class="btn btn-primary" id="buttonX" @onclick="ButtonX_onclick">Click me</button>
<br />
<div id="chart"></div>


@code
{
    private MarkupString result;

    public async Task ButtonX_onclick()
    {
        List<double?> johnValues = new List<double?> { 5, 3, 4, 7, 2 };
        List<double?> janeValues = new List<double?> { 2, -2, -3, 2, 1 };
        List<double?> joeValues = new List<double?> { 3, 4, 4, -2, 5 };

        List<AreaSeriesData> johnData = new List<AreaSeriesData>();
        List<AreaSeriesData> janeData = new List<AreaSeriesData>();
        List<AreaSeriesData> joeData = new List<AreaSeriesData>();

        johnValues.ForEach(p => johnData.Add(new AreaSeriesData { Y = p }));
        janeValues.ForEach(p => janeData.Add(new AreaSeriesData { Y = p }));
        joeValues.ForEach(p => joeData.Add(new AreaSeriesData { Y = p }));

        var chartOptions = new Highcharts
            {
                Title = new Title
                {
                    Text = "Area chart with negative values"
                },
                Tooltip = new Tooltip 
                          {
                              BorderColor = "red",
                          },
        XAxis = new List<XAxis>
        {
                        new XAxis
                        {
                            Categories =  new List<string> { "Apples", "Oranges", "Pears", "Grapes", "Bananas" },
                            Labels = new XAxisLabels{
                                Formatter = "return FormatterFunction.call(this, arguments);"
                            }
                        }
                    },
                Credits = new Credits
                {
                    Enabled = false
                },
                Series = new List<Series>
        {
            new AreaSeries
            {
                Name = "John",
                Data = johnData as List<AreaSeriesData>
        },
        new AreaSeries
        {
        Name = "Jane",
        Data = janeData as List<AreaSeriesData>
            },
            new AreaSeries
            {
            Name = "Joe",
            Data = joeData as List<AreaSeriesData>
                }
                }
        };

        chartOptions.ID = "chart";
        var renderer = new HighchartsRenderer(chartOptions);

        await highChartsService.RenderChart(renderer);
    }
}